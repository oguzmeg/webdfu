"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=require("nanoevents");
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function i(e,t,i,r){return new(i||(i=Promise))((function(n,s){function o(e){try{d(r.next(e))}catch(e){s(e)}}function a(e){try{d(r.throw(e))}catch(e){s(e)}}function d(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}d((r=r.apply(e,t||[])).next())}))}exports.DFUseCommands=void 0,(e=exports.DFUseCommands||(exports.DFUseCommands={}))[e.GET_COMMANDS=0]="GET_COMMANDS",e[e.SET_ADDRESS=33]="SET_ADDRESS",e[e.ERASE_SECTOR=65]="ERASE_SECTOR";const r={DFU:1,SDFUse:2};class n extends Error{}function s(e){var t,i,r,s,o;const a=e.indexOf("/");if(!e.startsWith("@")||-1==a)throw new n(`Not a DfuSe memory descriptor: "${e}"`);const d=e.substring(1,a).trim(),u=e.substring(a);let c=[];const l={" ":1,B:1,K:1024,M:1048576};let f,h=/\/\s*(0x[0-9a-fA-F]{1,8})\s*\/(\s*[0-9]+\s*\*\s*[0-9]+\s?[ BKM]\s*[abcdefg]\s*,?\s*)+/g;for(;f=h.exec(u);){let e,n=/([0-9]+)\s*\*\s*([0-9]+)\s?([ BKM])\s*([abcdefg])\s*,?\s*/g,a=parseInt(null!==(t=null==f?void 0:f[1])&&void 0!==t?t:"",16);for(;e=n.exec(f[0]);){let t=parseInt(e[1],10),n=parseInt(e[2])*(null!==(r=l[null!==(i=null==e?void 0:e[3])&&void 0!==i?i:""])&&void 0!==r?r:0),d=(null===(o=null!==(s=null==e?void 0:e[4])&&void 0!==s?s:"")||void 0===o?void 0:o.charCodeAt(0))-"a".charCodeAt(0)+1,u={start:a,sectorSize:n,end:a+n*t,readable:0!=(1&d),erasable:0!=(2&d),writable:0!=(4&d)};c.push(u),a+=n*t}}return{name:d,segments:c}}function o(e){return{bLength:e.getUint8(0),bDescriptorType:e.getUint8(1),bmAttributes:e.getUint8(2),wDetachTimeOut:e.getUint16(3,!0),wTransferSize:e.getUint16(5,!0),bcdDFUVersion:e.getUint16(7,!0)}}function a(e){return{bLength:e.getUint8(0),bDescriptorType:e.getUint8(1),bInterfaceNumber:e.getUint8(2),bAlternateSetting:e.getUint8(3),bNumEndpoints:e.getUint8(4),bInterfaceClass:e.getUint8(5),bInterfaceSubClass:e.getUint8(6),bInterfaceProtocol:e.getUint8(7),iInterface:e.getUint8(8),descriptors:[]}}function d(e){let t,i=e,r=[],n=!1;for(;i.byteLength>2;){let e=i.getUint8(0),s=i.getUint8(1),d=new DataView(i.buffer.slice(0,e));if(4==s)t=a(d),n=254==t.bInterfaceClass&&1==t.bInterfaceSubClass,r.push(t);else if(n&&33==s){let e=o(d);r.push(e),null==t||t.descriptors.push(e)}else{let i={bLength:e,bDescriptorType:s,descData:d};r.push(i),t&&t.descriptors.push(i)}i=new DataView(i.buffer.slice(e))}return r}function u(e){let t=d(new DataView(e.buffer.slice(9)));return{bLength:e.getUint8(0),bDescriptorType:e.getUint8(1),wTotalLength:e.getUint16(2,!0),bNumInterfaces:e.getUint8(4),bConfigurationValue:e.getUint8(5),iConfiguration:e.getUint8(6),bmAttributes:e.getUint8(7),bMaxPower:e.getUint8(8),descriptors:t}}class c{constructor(){this.events=t.createNanoEvents()}}class l{constructor(){this.events=t.createNanoEvents()}}class f{constructor(){this.events=t.createNanoEvents()}}const h={DETACH:0,DOWNLOAD:1,UPLOAD:2,GETSTATUS:3,CLRSTATUS:4,GETSTATE:5,ABORT:6,appIDLE:0,appDETACH:1,dfuIDLE:2,dfuDOWNLOAD_SYNC:3,dfuDNBUSY:4,dfuDOWNLOAD_IDLE:5,dfuMANIFEST_SYNC:6,dfuMANIFEST:7,dfuMANIFEST_WAIT_RESET:8,dfuUPLOAD_IDLE:9,dfuERROR:10,STATUS_OK:0};exports.WebDFU=class{constructor(e,i={},r){this.device=e,this.settings=i,this.log=r,this.events=t.createNanoEvents(),this.interfaces=[],this.connected=!1,this.dfuseStartAddress=NaN}get type(){var e,t;return 282==(null===(e=this.properties)||void 0===e?void 0:e.DFUVersion)&&2==(null===(t=this.currentInterfaceSettings)||void 0===t?void 0:t.alternate.interfaceProtocol)?r.SDFUse:r.DFU}init(){return i(this,void 0,void 0,(function*(){this.interfaces=yield this.findDfuInterfaces(),this.events.emit("init")}))}connect(e){return i(this,void 0,void 0,(function*(){this.device.opened||(yield this.device.open());let t=null;try{t=yield this.getDFUDescriptorProperties()}catch(e){throw this.events.emit("disconnect",e),e}const i=this.interfaces[e];if(!i)throw new n("Interface not found");this.currentInterfaceSettings=i,this.currentInterfaceSettings.name&&(this.dfuseMemoryInfo=s(this.currentInterfaceSettings.name)),t&&(this.properties=t);try{yield this.open()}catch(e){throw this.events.emit("disconnect",e),e}this.events.emit("connect")}))}close(){return i(this,void 0,void 0,(function*(){yield this.device.close(),this.events.emit("disconnect")}))}read(e,t){if(!this)throw new n("Required initialized driver");const i=new c;try{let n;n=this.type===r.SDFUse?this.do_dfuse_read(i,e,t):this.do_read(i,e,t),n.then((e=>i.events.emit("end",e))).catch((e=>i.events.emit("error",e)))}catch(e){i.events.emit("error",e)}return i}write(e,t,i){if(!this)throw new n("Required initialized driver");let s=new l;return setTimeout((()=>{try{let n;n=this.type===r.SDFUse?this.do_dfuse_write(s,e,t):this.do_write(s,e,t,i),n.then((()=>s.events.emit("end"))).catch((e=>s.events.emit("error",e)))}catch(e){s.events.on("error",e)}}),0),s}getDFUDescriptorProperties(){var e;return i(this,void 0,void 0,(function*(){let t=u(yield this.readConfigurationDescriptor(0)),i=null,r=null===(e=this.device.configuration)||void 0===e?void 0:e.configurationValue;if(t.bConfigurationValue==r)for(let e of t.descriptors)if(33==e.bDescriptorType&&e.hasOwnProperty("bcdDFUVersion")){i=e;break}return i?{WillDetach:0!=(8&i.bmAttributes),ManifestationTolerant:0!=(4&i.bmAttributes),CanUpload:0!=(2&i.bmAttributes),CanDownload:0!=(1&i.bmAttributes),TransferSize:i.wTransferSize,DetachTimeOut:i.wDetachTimeOut,DFUVersion:i.bcdDFUVersion}:null}))}findDfuInterfaces(){return i(this,void 0,void 0,(function*(){const e=[];for(let t of this.device.configurations)for(let i of t.interfaces)for(let r of i.alternates)254!=r.interfaceClass||1!=r.interfaceSubclass||1!=r.interfaceProtocol&&2!=r.interfaceProtocol||e.push({configuration:t,interface:i,alternate:r,name:r.interfaceName});return this.settings.forceInterfacesName&&(yield this.fixInterfaceNames(e)),e}))}fixInterfaceNames(e){var t,r,n;return i(this,void 0,void 0,(function*(){if(e.some((e=>null==e.name))){yield this.device.open(),yield this.device.selectConfiguration(1);let i=yield this.readInterfaceNames();for(let s of e)if(null===s.name){let e=s.configuration.configurationValue,o=s.interface.interfaceNumber,a=s.alternate.alternateSetting;s.name=null===(n=null===(r=null===(t=null==i?void 0:i[e])||void 0===t?void 0:t[o])||void 0===r?void 0:r[a])||void 0===n?void 0:n.toString()}}}))}readStringDescriptor(e,t=0){return i(this,void 0,void 0,(function*(){const i={requestType:"standard",recipient:"device",request:6,value:768|e,index:t};let r=yield this.device.controlTransferIn(i,1);if(r.data&&"ok"==r.status){const e=r.data.getUint8(0);if(r=yield this.device.controlTransferIn(i,e),r.data&&"ok"==r.status){const i=(e-2)/2;let n=[];for(let e=0;e<i;e++)n.push(r.data.getUint16(2+2*e,!0));return 0==t?n:String.fromCharCode.apply(String,n)}}throw new n(`Failed to read string descriptor ${e}: ${r.status}`)}))}readDeviceDescriptor(){return i(this,void 0,void 0,(function*(){const e=yield this.device.controlTransferIn({requestType:"standard",recipient:"device",request:6,value:256,index:0},18);if(!e.data||"ok"!==e.status)throw new n(`Failed to read device descriptor: ${e.status}`);return e.data}))}readInterfaceNames(){var e;return i(this,void 0,void 0,(function*(){let t={},i=new Set;for(let r=0;r<this.device.configurations.length;r++){let n=u(yield this.readConfigurationDescriptor(r)),s=n.bConfigurationValue;t[s]={};for(let r of n.descriptors)4===r.bDescriptorType&&(r=r,(null===(e=t[s])||void 0===e?void 0:e[r.bInterfaceNumber])||(t[s][r.bInterfaceNumber]={}),t[s][r.bInterfaceNumber][r.bAlternateSetting]=r.iInterface,r.iInterface>0&&i.add(r.iInterface))}let r={};for(let e of i)try{r[e]=yield this.readStringDescriptor(e,1033)}catch(t){console.log(t),r[e]=null}for(let e of Object.values(t))for(let t of Object.values(e))for(let e in t)t[e]=r[t[e]];return t}))}readConfigurationDescriptor(e){return i(this,void 0,void 0,(function*(){const t={requestType:"standard",recipient:"device",request:6,value:512|e,index:0},i=yield this.device.controlTransferIn(t,4);if(!i.data||"ok"!==i.status)throw new n(`controlTransferIn error. [status]: ${i.status}`);let r=i.data.getUint16(2,!0);const s=yield this.device.controlTransferIn(t,r);if(!s.data||"ok"!==s.status)throw new n(`controlTransferIn error. [status]: ${s.status}`);return s.data}))}open(){var e;return i(this,void 0,void 0,(function*(){if(!this.currentInterfaceSettings)throw new n("Required selected interface");const t=this.currentInterfaceSettings.configuration.configurationValue;if(this.device.configuration&&this.device.configuration.configurationValue===t||(yield this.device.selectConfiguration(t)),!this.device.configuration)throw new n(`Couldn't select the configuration '${t}'`);const i=this.currentInterfaceSettings.interface.interfaceNumber;(null===(e=this.device.configuration.interfaces[i])||void 0===e?void 0:e.claimed)||(yield this.device.claimInterface(i));const r=this.currentInterfaceSettings.alternate.alternateSetting;let s=this.device.configuration.interfaces[i];(null==s?void 0:s.alternate)&&s.alternate.alternateSetting==r||(yield this.device.selectAlternateInterface(i,r))}))}detach(){return this.requestOut(h.DETACH,void 0,1e3)}abort(){return this.requestOut(h.ABORT)}waitDisconnected(e){return i(this,void 0,void 0,(function*(){let t=this,i=this.device;return new Promise(((r,n)=>{let s;function o(n){n.device===i&&(e>0&&clearTimeout(s),t.connected=!1,navigator.usb.removeEventListener("disconnect",o),n.stopPropagation(),r(t))}e>0?s=window.setTimeout((()=>{navigator.usb.removeEventListener("disconnect",o),t.connected&&n("Disconnect timeout expired")}),e):navigator.usb.addEventListener("disconnect",o)}))}))}isError(){return i(this,void 0,void 0,(function*(){try{const e=yield this.getStatus();return!e||(null==e?void 0:e.state)==h.dfuERROR}catch(e){return!0}}))}getState(){return this.requestIn(h.GETSTATE,1).then((e=>Promise.resolve(e.getUint8(0))),(e=>Promise.reject("DFU GETSTATE failed: "+e)))}getStatus(){return this.requestIn(h.GETSTATUS,6).then((e=>Promise.resolve({status:e.getUint8(0),pollTimeout:16777215&e.getUint32(1,!0),state:e.getUint8(4)})),(e=>Promise.reject("DFU GETSTATUS failed: "+e)))}clearStatus(){return this.requestOut(h.CLRSTATUS)}get intfNumber(){if(!this.currentInterfaceSettings)throw new n("Required selected interface");return this.currentInterfaceSettings.interface.interfaceNumber}requestOut(e,t,r=0){return i(this,void 0,void 0,(function*(){try{const i=yield this.device.controlTransferOut({requestType:"class",recipient:"interface",request:e,value:r,index:this.intfNumber},t);if("ok"!==i.status)throw new n(i.status);return i.bytesWritten}catch(e){throw new n("ControlTransferOut failed: "+e)}}))}requestIn(e,t,r=0){return i(this,void 0,void 0,(function*(){try{const i=yield this.device.controlTransferIn({requestType:"class",recipient:"interface",request:e,value:r,index:this.intfNumber},t);if("ok"!==i.status||!i.data)throw new n(i.status);return i.data}catch(e){throw new n("ControlTransferIn failed: "+e)}}))}download(e,t){return this.requestOut(h.DOWNLOAD,e,t)}upload(e,t){return this.requestIn(h.UPLOAD,e,t)}abortToIdle(){return i(this,void 0,void 0,(function*(){yield this.abort();let e=yield this.getState();if(e==h.dfuERROR&&(yield this.clearStatus(),e=yield this.getState()),e!=h.dfuIDLE)throw new n("Failed to return to idle state after abort: state "+e)}))}poll_until(e){return i(this,void 0,void 0,(function*(){let t=yield this.getStatus();function i(e){return new Promise((t=>{setTimeout(t,e)}))}for(;!e(t.state)&&t.state!=h.dfuERROR;)yield i(t.pollTimeout),t=yield this.getStatus();return t}))}poll_until_idle(e){return this.poll_until((t=>t==e))}do_read(e,t,r=1/0,n=0){return i(this,void 0,void 0,(function*(){let i,s,o=n,a=[],d=0;e.events.emit("process",0);do{s=Math.min(t,r-d),i=yield this.upload(s,o++),i.byteLength>0&&(a.push(i),d+=i.byteLength),e.events.emit("process",d,Number.isFinite(r)?r:void 0)}while(d<r&&i.byteLength==s);return d==r&&(yield this.abortToIdle()),new Blob(a,{type:"application/octet-stream"})}))}do_write(e,t,r,s=!0){return i(this,void 0,void 0,(function*(){let i=0,o=r.byteLength,a=0;for(e.events.emit("write/start"),e.events.emit("write/process",i,o);i<o;){const s=o-i,d=Math.min(s,t);let u,c=0;try{c=yield this.download(r.slice(i,i+d),a++),u=yield this.poll_until_idle(h.dfuDOWNLOAD_IDLE)}catch(e){throw new n("Error during DFU download: "+e)}if(u.status!=h.STATUS_OK)throw new n(`DFU DOWNLOAD failed state=${u.state}, status=${u.status}`);i+=c,e.events.emit("write/process",i,o)}try{yield this.download(new ArrayBuffer(0),a++)}catch(e){throw new n("Error during final DFU download: "+e)}if(e.events.emit("write/end",i),s){let e;try{if(e=yield this.poll_until((e=>e==h.dfuIDLE||e==h.dfuMANIFEST_WAIT_RESET)),e.status!=h.STATUS_OK)throw new n(`DFU MANIFEST failed state=${e.state}, status=${e.status}`)}catch(e){if(!e.endsWith("ControlTransferIn failed: NotFoundError: Device unavailable.")&&!e.endsWith("ControlTransferIn failed: NotFoundError: The device was disconnected."))throw new n("Error during DFU manifest: "+e);this.log.warning("Unable to poll final manifestation status")}}else try{yield this.getStatus()}catch(e){}try{yield this.device.reset()}catch(e){if("NetworkError: Unable to reset the device."!=e&&"NotFoundError: Device unavailable."!=e&&"NotFoundError: The device was disconnected."!=e)throw new n("Error during reset for manifestation: "+e)}}))}do_dfuse_write(e,t,r){var s;return i(this,void 0,void 0,(function*(){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new n("No memory map available");e.events.emit("erase/start");let i=0,o=r.byteLength,a=this.dfuseStartAddress;if(isNaN(a)){if(a=null===(s=this.dfuseMemoryInfo.segments[0])||void 0===s?void 0:s.start,!a)throw new n("startAddress not found");this.log.warning("Using inferred start address 0x"+a.toString(16))}else if(null===this.getDfuseSegment(a)&&0!==r.byteLength)throw new n(`Start address 0x${a.toString(16)} outside of memory map bounds`);yield new Promise(((t,i)=>{if(!a)return void i(new n("startAddress not found"));const r=this.erase(a,o);r.events.on("process",((...t)=>e.events.emit("erase/process",...t))),r.events.on("error",i),r.events.on("end",(()=>{e.events.emit("erase/end"),t()}))})),e.events.emit("write/start");let d=a;for(;i<o;){const s=o-i,a=Math.min(s,t);let u,c=0;try{yield this.dfuseCommand(exports.DFUseCommands.SET_ADDRESS,d,4),c=yield this.download(r.slice(i,i+a),2),u=yield this.poll_until_idle(h.dfuDOWNLOAD_IDLE),d+=a}catch(e){throw new n("Error during DfuSe download: "+e)}if(u.status!=h.STATUS_OK)throw new n(`DFU DOWNLOAD failed state=${u.state}, status=${u.status}`);i+=c,e.events.emit("write/process",i,o)}e.events.emit("write/end",i);try{yield this.dfuseCommand(exports.DFUseCommands.SET_ADDRESS,a,4),yield this.download(new ArrayBuffer(0),0)}catch(e){throw new n("Error during DfuSe manifestation: "+e)}yield this.poll_until((e=>e==h.dfuMANIFEST))}))}do_dfuse_read(e,t,r=1/0){var s;return i(this,void 0,void 0,(function*(){if(!this.dfuseMemoryInfo)throw new n("Unknown a DfuSe memory info");let i=this.dfuseStartAddress;if(isNaN(i)){if(i=null===(s=this.dfuseMemoryInfo.segments[0])||void 0===s?void 0:s.start,!i)throw new n("Unknown memory segments");this.log.warning("Using inferred start address 0x"+i.toString(16))}else null===this.getDfuseSegment(i)&&this.log.warning(`Start address 0x${i.toString(16)} outside of memory map bounds`);return(yield this.getState())!=h.dfuIDLE&&(yield this.abortToIdle()),yield this.dfuseCommand(exports.DFUseCommands.SET_ADDRESS,i,4),yield this.abortToIdle(),yield this.do_read(e,t,r,2)}))}getDfuseSegment(e){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new n("No memory map information available");for(let t of this.dfuseMemoryInfo.segments)if(t.start<=e&&e<t.end)return t;return null}getDfuseFirstWritableSegment(){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new n("No memory map information available");for(let e of this.dfuseMemoryInfo.segments)if(e.writable)return e;return null}getDfuseMaxReadSize(e){if(!this.dfuseMemoryInfo||!this.dfuseMemoryInfo.segments)throw new n("No memory map information available");let t=0;for(let i of this.dfuseMemoryInfo.segments)if(i.start<=e&&e<i.end){if(!i.readable)return 0;t+=i.end-e}else if(i.start==e+t){if(!i.readable)break;t+=i.end-i.start}return t}getDfuseSectorStart(e,t){if(void 0===t&&(t=this.getDfuseSegment(e)),!t)throw new n(`Address ${e.toString(16)} outside of memory map`);const i=Math.floor((e-t.start)/t.sectorSize);return t.start+i*t.sectorSize}getDfuseSectorEnd(e,t=this.getDfuseSegment(e)){if(!t)throw new n(`Address ${e.toString(16)} outside of memory map`);const i=Math.floor((e-t.start)/t.sectorSize);return t.start+(i+1)*t.sectorSize}erase(e,t){const r=new f,s=this;return function(){var o,a,d;return i(this,void 0,void 0,(function*(){let i=s.getDfuseSegment(e),u=s.getDfuseSectorStart(e,i);const c=s.getDfuseSectorEnd(e+t-1);if(!i)throw new n("Unknown segment");let l=0;const f=c-u;for(f>0&&r.events.emit("process",l,f);u<c;){if((null!==(o=null==i?void 0:i.end)&&void 0!==o?o:0)<=u&&(i=s.getDfuseSegment(u)),null==i?void 0:i.erasable){const e=Math.floor((u-i.start)/i.sectorSize),t=i.start+e*i.sectorSize;yield s.dfuseCommand(exports.DFUseCommands.ERASE_SECTOR,t,4),u=t+i.sectorSize,l+=i.sectorSize}else l=Math.min(l+(null!==(a=null==i?void 0:i.end)&&void 0!==a?a:0)-u,f),u=null!==(d=null==i?void 0:i.end)&&void 0!==d?d:0;r.events.emit("process",l,f)}}))}().then((()=>r.events.emit("end"))).catch((e=>r.events.emit("error",e))),r}dfuseCommand(e,t=0,r=1){return i(this,void 0,void 0,(function*(){const i={[exports.DFUseCommands.GET_COMMANDS]:"GET_COMMANDS",[exports.DFUseCommands.SET_ADDRESS]:"SET_ADDRESS",[exports.DFUseCommands.ERASE_SECTOR]:"ERASE_SECTOR"};let s=new ArrayBuffer(r+1),o=new DataView(s);if(o.setUint8(0,e),1==r)o.setUint8(1,t);else{if(4!=r)throw new n("Don't know how to handle data of len "+r);o.setUint32(1,t,!0)}try{yield this.download(s,0)}catch(t){throw new n("Error during special DfuSe command "+i[e]+":"+t)}if((yield this.poll_until((e=>e!=h.dfuDNBUSY))).status!=h.STATUS_OK)throw new n("Special DfuSe command "+e+" failed")}))}},exports.WebDFUError=n,exports.WebDFUType=r,exports.dfuCommands=h,exports.parseConfigurationDescriptor=u,exports.parseDeviceDescriptor=function(e){return{bLength:e.getUint8(0),bDescriptorType:e.getUint8(1),bcdUSB:e.getUint16(2,!0),bDeviceClass:e.getUint8(4),bDeviceSubClass:e.getUint8(5),bDeviceProtocol:e.getUint8(6),bMaxPacketSize:e.getUint8(7),idVendor:e.getUint16(8,!0),idProduct:e.getUint16(10,!0),bcdDevice:e.getUint16(12,!0),iManufacturer:e.getUint8(14),iProduct:e.getUint8(15),iSerialNumber:e.getUint8(16),bNumConfigurations:e.getUint8(17)}},exports.parseFunctionalDescriptor=o,exports.parseInterfaceDescriptor=a,exports.parseMemoryDescriptor=s,exports.parseSubDescriptors=d;
